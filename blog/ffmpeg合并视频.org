#+TITLE:       ffmpeg合并视频
#+AUTHOR:      李鹏程 (Li Pengcheng)
#+EMAIL:       lpc1983@gmail.com
#+DATE:        2015-07-19 Sun
#+URI:         /blog/%y/%m/%d/ffmpeg合并视频
#+KEYWORDS:    ffmpeg
#+TAGS:        ffmpeg
#+LANGUAGE:    AUTO
#+OPTIONS:     H:3 num:nil toc:nil \n:nil ::t |:t ^:nil -:nil f:t *:t <:t
#+DESCRIPTION: ffmpeg合并视频
* 无损合并视频的多种方法
从某些视频网站下载的视频是分段的, 现在的任务是将这些视频片段合并起来，并且尽量无损。
** FFmpeg concat 分离器
这种方法成功率很高，也是最好的，但是需要 FFmpeg 1.1 以上版本。先创建一个文本文件 filelist.txt：
#+BEGIN_SRC
file 'input1.mkv'
file 'input2.mkv'
file 'input3.mkv'
#+END_SRC
然后：
#+BEGIN_SRC sh
ffmpeg -f concat -i filelist.txt -c copy output.mkv
#+END_SRC
注意：使用 FFmpeg concat 分离器时，如果文件名有奇怪的字符，要在 filelist.txt 中转义。
** FFmpeg concat 协议
对于 MPEG 格式的视频，可以直接连接：
#+BEGIN_SRC
ffmpeg -i "concat:input1.mpg|input2.mpg|input3.mpg" -c copy output.mpg
#+END_SRC
对于非 MPEG 格式容器，但是是 MPEG 编码器（H.264、DivX、XviD、MPEG4、MPEG2、AAC、MP2、MP3 等），可以包装进 TS 格式的容器再合并。在新浪视频，有很多视频使用 H.264 编码器，可以采用这个方法
#+BEGIN_SRC
ffmpeg -i input1.flv -c copy -bsf:v h264_mp4toannexb -f mpegts input1.ts
ffmpeg -i input2.flv -c copy -bsf:v h264_mp4toannexb -f mpegts input2.ts
ffmpeg -i input3.flv -c copy -bsf:v h264_mp4toannexb -f mpegts input3.ts
ffmpeg -i "concat:input1.ts|input2.ts|input3.ts" -c copy -bsf:a aac_adtstoasc -movflags +faststart output.mp4
#+END_SRC
保存 QuickTime/MP4 格式容器的时候，建议加上 /-movflags +faststart/。这样分享文件给别人的时候可以边下边看。
** Mencoder 连接文件并重建索引
这种方法只对很少的视频格式生效。幸运的是，新浪视频使用的 FLV 格式是可以这样连接的。对于没有使用 MPEG 编码器的视频（如 FLV1 编码器），可以尝试这种方法，或许能够成功。
#+BEGIN_SRC
mencoder -forceidx -of lavf -oac copy -ovc copy -o output.flv input1.flv input2.flv input3.flv
** 使用 FFmpeg concat 过滤器重新编码（有损）
语法有点复杂，但是其实不难。这个方法可以合并不同编码器的视频片段，也可以作为其他方法失效的后备措施。
#+BEGIN_SRC
ffmpeg -i input1.mp4 -i input2.webm -i input3.avi -filter_complex '[0:0] [0:1] [1:0] [1:1] [2:0] [2:1] concat=n=3:v=1:a=1 [v] [a]' -map '[v]' -map '[a]' <编码器选项> output.mkv
#+END_SRC
如你所见，上面的命令合并了三种不同格式的文件，FFmpeg concat 过滤器会重新编码它们。注意这是有损压缩。
[0:0] [0:1] [1:0] [1:1] [2:0] [2:1] 分别表示第一个输入文件的视频、音频、第二个输入文件的视频、音频、第三个输入文件的视频、音频。concat=n=3:v=1:a=1 表示有三个输入文件，输出一条视频流和一条音频流。[v] [a] 就是得到的视频流和音频流的名字，注意在 bash 等 shell 中需要用引号，防止通配符扩展。
** 提示
1. 有些媒体需要先分离视频和音频，合并完成后再封装回去。
2. 对于 Packed B-Frames 的视频，如果封装成 MKV 格式的时候提示 Can't write packet with unknown timestamp，尝试在 FFmpeg 命令的 ffmpeg 后面加上 /-fflags +genpts/
** 参考
[[http://m13253.blogspot.com/2013/10/ways-to-join-videos-losslessly.html]]
